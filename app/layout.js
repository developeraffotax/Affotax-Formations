"use client";

import Header from "@/components/header/Header";
import "./globals.css";

import Footer from "@/components/footer/Footer";
import Providers from "@/app/providers.js";
import { createClient } from "@/lib/supabase/client";
import { redirect } from "next/navigation";
import { createContext, useEffect, useState } from "react";

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export const UserContext = createContext();

export default function RootLayout({ children }) {


  // useEffect(() => {
  //   const navbar = document.getElementById("main-header");
  //   const navbarMobile = document.getElementById("main-header-mobile");
  //   window.onscroll = function (e) {

  //     if (
  //       document.body.scrollTop >= 100 ||
  //       document.documentElement.scrollTop >= 100
  //     ) {
  //       navbar.classList.add("bg-slate-100/50",);
  //       navbar.classList.remove("bg-slate-100", );

  //       navbarMobile.classList.add("bg-slate-100/50",);
  //       navbarMobile.classList.remove("bg-slate-100", );
  //     } else {

  //       navbar.classList.add("bg-slate-100",);
  //       navbar.classList.remove("bg-slate-100/50",);

  //       navbarMobile.classList.add("bg-slate-100",);
  //       navbarMobile.classList.remove("bg-slate-100/50",);

  //     }
  //   };
  // }, [])





  const [user, setUser] = useState(null);

  useEffect(() => {
    const supabase = createClient();

    const { data } = supabase.auth.onAuthStateChange((event, session) => {
      if (session) {
        // If there is a session (user is logged in)
        setUser(session.user);
      } else {
        // If no session (user is logged out)
        setUser(null);
      }
    });

    // Cleanup listener when the component unmounts
    return () => {
      data.subscription.unsubscribe();
    };
  }, []);



  return (
    <html lang="en">
      <body>
        <Providers>
          <UserContext.Provider value={{user, setUser}}>
          <Header />
          <div className="mt-[112px] max-xl:mt-20">{children}</div>
          <Footer />
          </UserContext.Provider>
        </Providers>
      </body>
    </html>
  );
}
